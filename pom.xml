<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>nifi-project</groupId>
	<artifactId>nifi-project</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>nar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<nifi.version>1.5.0</nifi.version>
		<jacoco.unit.test.execution>target/coverage-reports/unit-tests/jacoco-ut.exec</jacoco.unit.test.execution>
		<jacoco.unit.test.report>target/coverage-reports/unit-tests</jacoco.unit.test.report>
		<jacoco.integration.test.execution>target/coverage-reports/integration-tests/jacoco-it.exec</jacoco.integration.test.execution>
		<jacoco.integration.test.report>target/coverage-reports/integration-tests</jacoco.integration.test.report>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.5.201505241946</version>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${jacoco.unit.test.execution}</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created 
						after unit tests have been run. -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${jacoco.unit.test.execution}</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${jacoco.unit.test.report}</outputDirectory>
						</configuration>
					</execution>
					<!-- The Executions required by unit tests are omitted. -->
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Failsafe plugin is executed. -->
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${jacoco.integration.test.execution}</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for integration tests after 
						integration tests have been run. -->
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${jacoco.integration.test.execution}</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${jacoco.integration.test.report}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.15</version>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skipTests>${skip.unit.tests}</skipTests>
					<reportsDirectory>${jacoco.unit.test.report}</reportsDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.19.1</version>
				<executions>
					<!-- Ensures that both integration-test and verify goals of the Failsafe 
						Maven plugin are executed. -->
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!-- <includes> <include>my.*</include> </includes> -->
							<!-- Sets the VM argument line used when integration tests are run. -->
							<argLine>${failsafeArgLine}</argLine>
							<!-- Skips integration tests if the value of skip.integration.tests 
								property is true -->
							<skipTests>${skip.integration.tests}</skipTests>
							<reportsDirectory>${jacoco.integration.test.report}</reportsDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>build-jar</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.nifi</groupId>
				<artifactId>nifi-nar-maven-plugin</artifactId>
				<version>1.2.0</version>
				<extensions>true</extensions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.apache.nifi</groupId>
			<artifactId>nifi-api</artifactId>
			<version>${nifi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.nifi</groupId>
			<artifactId>nifi-utils</artifactId>
			<version>${nifi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.nifi</groupId>
			<artifactId>nifi-processor-utils</artifactId>
			<version>${nifi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.nifi</groupId>
			<artifactId>nifi-ssl-context-service-api</artifactId>
			<version>${nifi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>1.5</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>${project.artifactId}</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.nifi</groupId>
			<artifactId>nifi-mock</artifactId>
			<version>${nifi.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>